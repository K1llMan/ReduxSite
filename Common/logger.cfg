## Допустимые уровни логгирования: CriticalError, Error, Warning, Information, Debug, All
## При использовании All нет необходимости включать другие уровни, в остальных случаях уровни перечисляются через "|".

RootLevels = All                            ## Уровни логгирования для корневого логгера
Loggers = File, FileDebug, Console          ## Список логгеров

## Файловый логгер
## Возможные параметры:
##  Type - тип. File или Console
##  Levels - уровни логгирования
##  File - только для файлового логгера, маска для имени файла. {filename} заменяется на заданный закачкой идентификатор.
##  Pattern - формат строки логгера. Возможные компоненты:
##      {newline} - символ новой строки
##      {category} - модуль, производящий запись в лог. Допустимо использовать указатель на количество слов в идентификаторе: {category:3}
##      {time} - время. Допустимо после двоеточия указать формат: {time:yyyy-MM-dd hh:mm:ss}
##      {kind} - тип записи
##      {msg} - сообщение.
File.Type = File
File.Levels = All
File.File = {filename}.txt
File.Pattern = {newline}{category}: {time} {kind}{msg}

## Файловый логгер
##FileDebug.Type = File
##FileDebug.Levels = Debug
##FileDebug.File = Test\{filename}_debug.txt
##FileDebug.Pattern = {newline}{category:3}: {time:yyyy-MM-dd hh:mm:ss} {kind}: {msg}

## Консольный логгер
Console.Type = Console
Console.Levels = All
Console.Pattern = {newline}{category}: {time} {kind}{msg}